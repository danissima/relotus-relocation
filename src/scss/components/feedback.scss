.feedback-all {
  h1,
  .breadcrumbs {
    margin-top: 50px;
  }

  h1 {
    margin-bottom: 50px;
  }

  &__grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 60px 24px;
  }

  &__controls {
    display: flex;
    justify-content: center;
    margin-top: 50px;
  }

  @include break($xl) {
    &__grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @include break($lg) {
    &__grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @include break($md) {
    h1 {
      margin-top: 20px;
    }

    &__grid {
      grid-template-columns: repeat(1, 1fr);
      gap: 20px;
    }

    &__controls {
      margin-top: 30px;
    }
  }
}

.feedback {
  &__carousel {
    --carousel-gap: 24px;
    margin: 0 calc(var(--block-padding-x) * -1);
  }

  .carousel__viewport {
    padding: 0 var(--carousel-gap);
  }

  .carousel__container {
    grid-auto-columns: calc(25% - var(--carousel-gap) / 4 * 3);
  }

  @include break($xl) {
    .carousel__container {
      grid-auto-columns: calc(100% / 3 - var(--carousel-gap) / 3 * 2);
    }
  }

  @include break($lg) {
    .carousel__container {
      grid-auto-columns: calc(50% - var(--carousel-gap) / 2);
    }
  }

  @include break($md) {
    &__carousel {
      --carousel-gap: 20px;
    }

    .carousel-arrows {
      display: none;
    }

    .carousel__container {
      grid-auto-columns: 220px;
    }
  }
}

.feedback-card {
  --feedback-card-color: #{$blue};
  --feedback-card-color-dark: #{darken($blue, 5%)};
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  border-radius: 16px;
  padding: 24px;
  background-color: $soft-gray;
  transition: background-color $transition;
  overflow: hidden;
  color: inherit;

  &_orange {
    --feedback-card-color: #{$orange};
    --feedback-card-color-dark: #{darken($orange, 5%)};
  }

  &_yellow {
    --feedback-card-color: #{$yellow};
    --feedback-card-color-dark: #{darken($yellow, 5%)};
  }

  @include hover {
    &:not(&_static):hover {
      background-color: var(--feedback-card-color);
      cursor: pointer;
      color: $white;
    }

    &:not(&_static):hover &__text svg,
    &:not(&_static):hover .h4 {
      color: $white;
    }

    &:not(&_static):hover &__pattern {
      color: var(--feedback-card-color-dark);
    }

    &:not(&_static):hover &__avatar {
      box-shadow: 0 0 0 8px $white;
    }
  }

  &:not(&_static):active {
    background-color: var(--feedback-card-color);
    color: $white;
  }

  &:not(&_static):active &__text svg,
  &:not(&_static):active .h4 {
    color: $white;
  }

  &:not(&_static):active &__avatar {
    box-shadow: none;
  }

  & > *:not(svg) {
    position: relative;
    z-index: 1;
  }

  &__avatar {
    border-radius: 50%;
    margin-bottom: 24px;
    padding-bottom: 100%;
    transition: box-shadow $transition;
  }

  .h4 {
    margin-top: auto;
    transition: color $transition;
  }

  &__text {
    display: grid;
    grid-template-columns: 1fr 24px;
    gap: 48px;
    align-items: flex-end;
    margin-top: 8px;

    p {
      transition: color $transition;
      font-size: 14px;
      line-height: 19.74px;
    }

    svg {
      transition: color $transition;
      color: $gray;
    }
  }

  &:not(&_youtube) &__text svg {
    display: none;
  }

  &__pattern {
    position: absolute;
    top: 30px;
    left: -112px;
    width: 520px;
    height: 260px;
    transition: color $transition;
    color: transparent;
  }

  @include break($md) {
    padding: 20px;

    &__avatar {
      margin-bottom: 20px;
    }

    &__text {
      grid-template-columns: 1fr 16px;
      gap: 24px;
      margin-top: 10px;

      svg {
        width: 16px;
        height: 16px;
      }
    }
  }
}

.feedback-modal {
  .modal__description {
    margin-bottom: 0;
  }

  .modal__description + lite-youtube {
    margin-top: 20px;
  }
}
